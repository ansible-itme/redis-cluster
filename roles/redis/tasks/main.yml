---
- name: 创建redis安装目录
  file: path={{ redis_dir }} owner=root group=root state=directory

- name: 拷贝redis安装包
  copy: src={{ redis_files }}/redis-3.2.11.tar.gz dest=/tmp

- name: 解压redis安装包
  shell: chdir=/tmp tar -xf redis-3.2.11.tar.gz -C {{ redis_dir }}

- name: 编译安装redis
  shell: chdir={{ redis_dir }}/redis-3.2.11 make && make install

- name: 创建redis集群目录
  shell: chdir={{ redis_dir }}  mkdir -pv redis_cluster/{{ item }}
  with_items:
     - "{{ port1 }}"
     - "{{ port2 }}"
     - "{{ port3 }}"

- name: 模版redis配置文件
  template: src=redis.conf1.j2 dest={{ redis_dir }}/redis_cluster/{{ port1 }}/redis.conf

- name: 拷贝redis.conf到redis集群{{ port2 }}目录下
  shell: cp {{ redis_dir }}/redis_cluster/{{ port1 }}/redis.conf {{ redis_dir }}/redis_cluster/{{ port2 }}/

- name: 拷贝redis.conf到redis集群{{ port3 }}目录下
  shell: cp {{ redis_dir }}/redis_cluster/{{ port1 }}/redis.conf {{ redis_dir }}/redis_cluster/{{ port3 }}/

- name: 修改redis配置文件并启动redis
  template: src=redis_config.sh.j2 dest={{ redis_dir }}/redis-3.2.11/redis_config.sh mode=0755
- shell: chdir={{ redis_dir }}/redis-3.2.11 ./redis_config.sh

- name: 拷贝ruby安装包
  copy: src={{ redis_files }}/ruby-2.5.1.tar.gz dest=/tmp

- name: 解压ruby安装包
  shell: chdir=/tmp tar -xf ruby-2.5.1.tar.gz -C {{ redis_dir }}

- name: 编译安装ruby
  shell: chdir={{ redis_dir }}/ruby-2.5.1 ./configure && make && make install

- name: ruby gem安装
  shell: gem install redis

- name: 创建redis cluster
  shell: chdir={{ redis_dir }}/redis-3.2.11/src  echo yes | ./redis-trib.rb create --replicas 1 {{ redis1 }}:{{ port1}} {{ redis1 }}:{{ port2 }} {{ redis1 }}:{{ port3 }} {{ redis2 }}:{{ port1 }} {{ redis2 }}:{{ port2 }} {{ redis2 }}:{{ port3 }}
  when: ansible_eth0['ipv4']['address']  == '{{ redis1 }}'

- name: 关闭redis
  shell: pkill -9  redis

- name: 添加访问密码后启动redis
  template: src=redis_add_pass.sh.j2 dest={{ redis_dir }}/redis-3.2.11/redis_add_pass.sh mode=0755
- shell: chdir={{ redis_dir }}/redis-3.2.11 ./redis_add_pass.sh

- name: 开机启动设置
  shell: echo "/usr/local/bin/redis-server /data/redis_cluster/{{ item }}/redis.conf" >> /etc/rc.local
  with_items:
     - "{{ port1 }}"
     - "{{ port2 }}"
     - "{{ port3 }}"

- name: 查看redis cluster 状态
  shell: redis-cli -h {{ redis1 }} -p {{ port1 }} -a {{ password }} cluster nodes
  register: result
- debug: var=result.stdout_lines verbosity=0
  when: ansible_eth0['ipv4']['address']  == '{{ redis1 }}'
...
